delta <- 0.82
c <- alpha/beta
Kb <- 1/beta
k1 <- 9
f1.r <- f1(inducer, k1, Ot, K1, Rt.K2)
plot(f1.r)
dev.off()
f1.r <- f1(inducer, k1, Ot, K1, Rt.K2)
f1.r <- f1(inducer, k1, Ot, K1, Rt.K2)
library(ggplot2)
ggplot(Iex_500, aes(x=time, y=Y)) + geom_line(colour="red") +
geom_line(data=Iex_7, colour="blue") + ggtitle("dY/dt")
plot(f1.r)
f2 <- function(Iex, c, Kb) {
(c * Iex)/(1 + Kb*Iex)
}
model <- function(t, state, params) {
with(as.list(c(state, params)), {
dY <- f1(I, k1, Ot, K1, Rt.k2) - (k2 * Y)
dI <- (f2(Iex,c, Kb) * Y) + delta*(Iex - I) - (k2 * I)
list(c(dY, dI))
})
}
parameters <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb = Kb, c=c, Iex = 500)
Iex_500 <- as.data.frame(ode(y=vars, times=time, func=model, parms=parameters))
model <- function(t, state, params) {
with(as.list(c(state, params)), {
dY <- f1(I, k1, Ot, K1, Rt.K2) - (k2 * Y)
dI <- (f2(Iex,c, Kb) * Y) + delta*(Iex - I) - (k2 * I)
list(c(dY, dI))
})
}
Iex_500 <- as.data.frame(ode(y=vars, times=time, func=model, parms=parameters))
ggplot(Iex_500, aes(x=time, y=Y)) + geom_line(colour="red")
time <- seq(0, 1000, by=0.01)
Iex_500 <- as.data.frame(ode(y=vars, times=time, func=model, parms=parameters))
ggplot(Iex_500, aes(x=time, y=Y)) + geom_line(colour="red")
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=parameters))
params <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=1, Iex = 7)
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=parameters))
ggplot(data=Iex_7, aes(x=time, y=I)) + geom_line(colour="red") + ggtitle("dI/dt")
time <- seq(0, 100, by=0.01)
params <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=1, Iex = 7)
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=parameters))
ggplot(data=Iex_7, aes(x=time, y=I)) + geom_line(colour="red") + ggtitle("dI/dt")
Ot <- 1e-3
model <- function(t, state, params) {
with(as.list(c(state, params)), {
dY <- f1(I, k1, Ot, K1, Rt.K2) - (k2 * Y)
dI <- (f2(Iex,c, Kb) * Y) + delta*(Iex - I) - (k2 * I)
list(c(dY, dI))
})
}
time <- seq(0, 5, by=0.001)
vars <- c(Y = 0, I = 0)
library(deSolve)
time <- seq(0, 10000, by=0.001)
vars <- c(Y = 0, I = 0)
parameters <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb = Kb, c=c, Iex = 500)
Iex_500 <- as.data.frame(ode(y=vars, times=time, func=model, parms=parameters))
time <- seq(0, 1000, by=0.001)
time <- seq(0, 1000, by=0.1)
parameters <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb = Kb, c=c, Iex = 500)
Iex_500 <- as.data.frame(ode(y=vars, times=time, func=model, parms=parameters))
ggplot(Iex_500, aes(x=time, y=Y)) + geom_line(colour="red")
ggplot(Iex_500, aes(x=time, y=Y)) + geom_line(colour="red") +
ggtitle("") + ylab("[Y](uM)")
ggplot(Iex_500, aes(x=time, y=Y)) + geom_line(colour="red") +
ggtitle("500 uM TMG") + ylab("[Y](uM)")
params <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=1, Iex = 7)
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=parameters))
ggplot(data=Iex_7, aes(x=time, y=I)) + geom_line(colour="red") + ggtitle("dI/dt")
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line(colour="red") + ggtitle("dI/dt")
ggplot(Iex_500, aes(x=time, y=Y)) + geom_line() +
ggtitle("500 uM TMG") + ylab("[Y](uM)")
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line() + ggtitle("dI/dt")
head(Iex_7)
head(Iex_500)
params <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c Iex = 7)
params <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 7)
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=parameters))
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line() + ggtitle("dI/dt")
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=param_7))
param_7 <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 7)
param_7 <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 7)
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=param_7))
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line() + ggtitle("dI/dt")
time <- seq(0, 200, by=1)
param_7 <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 7)
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=param_7))
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line() + ggtitle("dI/dt")
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line() + ggtitle("7 uM TMG")
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line() + ggtitle("7 uM TMG") + ylab("[Y] uM")
time <- seq(0, 200, by=0.1)
param_7 <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 7)
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=param_7))
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line() + ggtitle("7 uM TMG") + ylab("[Y] uM")
ggplot(Iex_500, aes(x=time, y=Y)) + geom_line() +
ggtitle("500 uM TMG") + ylab("[Y](uM)")
max500 <- max(Iex_500$Y)
Iex_500$frac.of.max <- Iex_500$Y/max500
ggplot(Iex_500, aes(x=time, y=frac.of.max)) + geom_line() +
ggtitle("500 uM TMG") + ylab("[Y](uM)")
max7 <- max(Iex_7$Y)
Iex_7$frac.of.max <- Iex_7$Y/max7
ggplot(data=Iex_7, aes(x=time, y=frac.of.max)) + geom_line() +
ggtitle("7 uM TMG") + ylab("[Y] uM")
time <- seq(0, 2000, by=0.1)
param_7 <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 7)
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=param_7))
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line() + ggtitle("7 uM TMG") + ylab("[Y] uM")
time <- seq(0, 2000, by=0.01)
param_7 <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 7)
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=param_7))
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line() + ggtitle("7 uM TMG") + ylab("[Y] uM")
time <- seq(0, 200, by=0.01)
param_7 <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 7)
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=param_7))
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line() + ggtitle("7 uM TMG") + ylab("[Y] uM")
max7 <- max(Iex_7$Y)
Iex_7$frac.of.max <- Iex_7$Y/max7
ggplot(data=Iex_7, aes(x=time, y=frac.of.max)) + geom_line() +
ggtitle("7 uM TMG") + ylab("[Y] uM")
plot(Iex_7)
Ot <- 1e-3
Rt.K2 <- 1e5
K1 <- 0.012
k2 <- 0.0055
beta <- 500
alpha <- 60000
delta <- 0.82
c <- alpha/beta
Kb <- 1/beta
k1 <- 9
f1 <- function(I, k1, Ot, K1, Rt.K2) {
r.gen <- k1 * Ot * (1 + (K1 * I^2))/(1 +( K1 * I^2) + Rt.K2)
r.gen
}
f2 <- function(Iex, c, Kb) {
(c * Iex)/(1 + Kb*Iex)
}
dY.dt <- function(I, params){
with(as.list(c(I, params)), {
dY <- (k1 * ((alpha * Ot)/((delta + k2)*k2)) *
((1 + (K1* I^2))/(1 + (K1 * I^2) + Rt.K2))) - (k2 * Y)
dY
})
}
dI.dt <- function(I, params) {
with(as.list(c(I, params)), {
Y <- Y.func(I, Iex, delta, beta, alpha, k2)
rate <- (((c * Iex)/(1 + Kb*Iex)) * Y) + b2*(Iex - I) - (a3 * I)
rate
})
}
params <- c(Iex=25, Ot = 1e-9, Rt.K2 = 1e5, K1 = 0.012,
k2 = 0.0055, beta = 500, alpha = 60000, delta = 0.82, k1 = 9)
model <- function(t, state, params) {
with(as.list(c(state, params)), {
dY <- f1(I, k1, Ot, K1, Rt.K2) - (k2 * Y)
dI <- (f2(Iex,c, Kb) * Y) + delta*(Iex - I) - (k2 * I)
list(c(dY, dI))
})
}
time <- seq(0, 1000, by=0.1)
vars <- c(Y = 0, I = 0)
library(deSolve)
param_500 <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 500)
Iex_500 <- as.data.frame(ode(y=vars, times=time, func=model, parms=param_500))
plot(Iex_500)
time <- seq(0, 200, by=0.01)
param_7 <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 7)
Iex_7 <- as.data.frame(ode(y=vars, times=time, func=model, parms=param_7))
library(ggplot2)
ggplot(Iex_500, aes(x=time, y=Y)) + geom_line() +
ggtitle("500 uM TMG") + ylab("[Y](uM)")
ggplot(data=Iex_7, aes(x=time, y=Y)) + geom_line() + ggtitle("7 uM TMG") + ylab("[Y] uM")
max500 <- max(Iex_500$Y)
Iex_500$frac.of.max <- Iex_500$Y/max500
ggplot(Iex_500, aes(x=time, y=frac.of.max)) + geom_line() +
ggtitle("500 uM TMG") + ylab("[Y](uM)")
max7 <- max(Iex_7$Y)
Iex_7$frac.of.max <- Iex_7$Y/max7
ggplot(data=Iex_7, aes(x=time, y=frac.of.max)) + geom_line() +
ggtitle("7 uM TMG") + ylab("[Y] uM")
ggplot(Iex_500, aes(x=time, y=I)) + geom_line()
ggplot(Iex_7, aes(x=time, y=I)) + geom_line()
library(deSolve)
param_500 <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 500)
Iex_500 <- as.data.frame(ode(y=vars, times=time, func=model, parms=param_500))
time <- seq(0, 200, by=0.01)
plot(Iex_50)
plot(Iex_500)
install.packages("deSolve")
install.packages("deSolve")
library(deSolve)
param_500 <- c(k1=k1, k2=k2, alpha=alpha, beta=beta, delta=delta,
Ot=Ot, K1=K1, a1=k2, Rt.K2=Rt.K2, Kb=Kb, c=c, Iex = 500)
Iex_500 <- as.data.frame(ode(y=vars, times=time, func=model, parms=param_500))
plot(Iex_500)
dev.off()
library(deSolve)
plot(Iex_500)
par(mfrow(c(1,1)))
?par
par(mfrow = c(1,1))
plot(Iex_500)
plot(Iex_500$time, Iex_500$Y)
par(mfrow = c(1,2))
plot(Iex_500$time, Iex_500$Y)
plot(Iex_500$time, Iex_500$I)
max(Iex_500)
max(Iex_500$Y)
max(Iex_500$I)
tail(Iex_500)
library(ggplot2)
library(gridExtra)
freg <- function(nrep, params) {
with(as.list(c(nrep, params)), {
nom <- 1 + (nrep/nns)*exp(-beta*Ens)
denom <- (nrep/nns) * (4 + exp(-beta*Em) + exp(-beta*Ea) + exp(-beta*El) + exp(-beta*Em)*exp(-beta*Ei))
r <- nom/denom
r
})
}
params <- c(nns=5, beta=5, Ens=50, El=50, Em=200, Ea=200, Ei=200)
nrep = 10
t <- freg(nrep, params)
lacI <- seq(0,100, by=1)
f <- freg(lacI, params)
plot(lacI, f, type="l")
freg <- function(nrep, params) {
with(as.list(c(nrep, params)), {
denom <- 1 + (nrep/nns)*exp(-beta*Ens)
nom <- (nrep/nns) * (4 + exp(-beta*Em) + exp(-beta*Ea) + exp(-beta*El) + exp(-beta*Em)*exp(-beta*Ei))
r <- nom/denom
r
})
}
lacI <- seq(0,100, by=1)
f <- freg(lacI, params)
plot(lacI, f, type="l")
freg <- function(nrep, params) {
with(as.list(c(nrep, params)), {
occ <- 1 + (nrep/nns)*(exp(-beta*aux) + exp(-beta * (main + inter)) + exp(-beta * (main + aux + i)) + exp(-beta * (main + aux)))
unocc <- 1 + (nrep/nns) * (exp(-beta * aux) + exp(-beta * main) + exp(-beta * (main + aux)) + exp(-beta * (main + aux)))
r <- occ/unocc
r
})
}
5e6
5e6 + 3
params <- c(nns=(5e6/20), beta=(1/37), loop=-6.17, main=-1.58, aux=0.98, inter=0.5)
nrep = 50
t <- freg(nrep, params)
freg <- function(nrep, params) {
with(as.list(c(nrep, params)), {
occ <- 1 + (nrep/nns)*(exp(-beta*aux) + exp(-beta * (main + inter)) + exp(-beta * (main + aux + loop + inter)) + exp(-beta * (main + aux)))
unocc <- 1 + (nrep/nns) * (exp(-beta * aux) + exp(-beta * main) + exp(-beta * (main + aux + loop)) + exp(-beta * (main + aux)))
r <- occ/unocc
r
})
}
params <- c(nns=(5e6/20), beta=(1/37), loop=-6.17, main=-1.58, aux=0.98, inter=0.5)
nrep = 50
t <- freg(nrep, params)
t
lacI <- seq(0,100, by=1)
f <- freg(lacI, params)
plot(lacI, f, type="l")
plot(lacI, f, type="l", xlim("[lacI]"))
plot(lacI, f, type="l", xlab=("[lacI]"))
plot(lacI, f, type="l", xlab=("[lacI]"), ylab=("F(reg)"))
lacI <- seq(0,5, by=.1)
f <- freg(lacI, params)
plot(lacI, f, type="l", xlab=("[lacI]"), ylab=("F(reg)"))
params <- c(nns=(5e6/20), beta=(1/37), loop=-6.17, main=-1.58, aux=0.98, inter=10)
nrep = 50
t <- freg(nrep, params)
params <- c(nns=(5e6/20), beta=(1/37), loop=-6.17, main=-1.58, aux=0.98, inter=100)
nrep = 50
t <- freg(nrep, params)
params <- c(nns=(5e6/20), beta=(1/37), loop=-6.17, main=-1.58, aux=0.98, inter=1)
nrep = 50
t <- freg(nrep, params)
params <- c(nns=1, beta=(1/37), loop=-6.17, main=-1.58, aux=0.98, inter=1)
nrep = 50
t <- freg(nrep, params)
clear
34+63
143.21+63
143.21+90
?glm
?glmer
update.packages()
library("TxDb.Hsapiens.UCSC.hg38.knownGene")
library("ChIPpeakAnno")
summits <- read.table("HAIB_T47D_FoxA1_summits.bed")
colnames(summits) <- c("chrom", "start", "end", "name", "score")
setwd("~/Dropbox/NYU2/AppliedGenomics/Assignment7")
summits <- read.table("HAIB_T47D_FoxA1_summits.bed")
colnames(summits) <- c("chrom", "start", "end", "name", "score")
nrwpeaks <- read.table("HAIB_T47D_FoxA1_peaks.narrowPeak")
colnames(nrwpeaks) <- c("chrom", "start", "end", "name", "score", "strand", "fold_enrichment", "-log10(pvalue)", "-log10qvalue", "summit_position")
nrwpeaks_gr <- toGRanges(nrwpeaks, format = "narrowPeak")
annoExon <- annoGR(TxDb.Hsapiens.UCSC.hg38.knownGene, feature="exon")
chrom.convert <- read.table("chromconvert.txt")
annoExon.t <- annoExon[annoExon$seqnames == "chr1",]
View(annoExon.t)
View(annoExon)
annoExon <- as.data.frame(annoGR(TxDb.Hsapiens.UCSC.hg38.knownGene, feature="exon"))
annoExon.t <- annoExon[annoExon$seqnames == "chr1",]
View(annoExon.t)
chrom.convert[chrom.convert[,1]=="chr1",2]
View(chrom.convert)
chrom.convert[chrom.convert[,2]=="chr1",1]
annoExon[annoExon$seqnames == "chr1",] = chrom.convert[chrom.convert[,2]=="chr1",1]
View(annoExon)
annoExon <- as.data.frame(annoGR(TxDb.Hsapiens.UCSC.hg38.knownGene, feature="exon"))
annoExon[annoExon$seqnames == "chr1",]$seqnames = chrom.convert[chrom.convert[,2]=="chr1",1]
View(annoExon)
chrom.convert[chrom.convert[,2]=="chr1",1]
chrom.convert[chrom.convert[,2]=="chr1",1][1]
class(chrom.convert[chrom.convert[,2]=="chr1",1])
class(annoExon$seqnames)
View(annoExon.t)
annoExon[annoExon$seqnames == "chr1",]$seqnames
annoExon <- as.data.frame(annoGR(TxDb.Hsapiens.UCSC.hg38.knownGene, feature="exon"))
x <- annoExon[annoExon$seqnames == "chr1",]$seqnames
?match
x <- match(annoExon$seqnames, chrom.convert[2,])
head(x)
annoExon <- annoGR(TxDb.Hsapiens.UCSC.hg38.knownGene, feature="exon")
x <- match(annoExon$seqnames, chrom.convert[2,])
View(chrom.convert)
head(x)
head(annoExon$seqnames)
names(annoExon)
p <- as.numeric(read.delim("p.txt", sep=","))
m <- as.numeric(read.delim("m.txt", sep=","))
ycorr <- as.numeric(read.delim("ycorr.txt", sep=","))
xcorr <- as.numeric(read.delim("xcorr.txt", sep=","))
altd  <- c(122)
x <- seq.int((length(p)-1)/2*-1,(length(p)-1)/2)
plot(x,p,type='l',col=c('red'),main='Peak Model',xlab='Distance to the middle',ylab='Percentage')
x <- seq.int((length(p)-1)/2*-1,(length(p)-1)/2)
plot(x,p,type='l',col=c('red'),main='Peak Model',xlab='Distance to the middle',ylab='Percentage')
plot(xcorr,ycorr,type='l',col=c('black'),main='Cross-Correlation',xlab='Lag between + and - tags',ylab='Correlation')
p <- as.numeric(read.delim("p.txt", sep=","))
setwd("~/Dropbox/NYU2/AppliedGenomics/Assignment7")
p <- as.numeric(read.delim("p.txt", sep=","))
p <- read.delim("p.txt", sep=",")
View(p)
p <- read.delim("p.txt", sep=",", header=F)
View(p)
p <- as.numeric(read.delim("p.txt", sep=",", header=F))
m <- as.numeric(read.delim("m.txt", sep=",", header=F))
ycorr <- as.numeric(read.delim("ycorr.txt", sep=",", header=F))
xcorr <- as.numeric(read.delim("xcorr.txt", sep=",", header=F))
altd  <- c(122)
x <- seq.int((length(p)-1)/2*-1,(length(p)-1)/2)
plot(x,p,type='l',col=c('red'),main='Peak Model',xlab='Distance to the middle',ylab='Percentage')
lines(x,m,col=c('blue'))
legend('topleft',c('forward tags','reverse tags'),lty=c(1,1,1),col=c('red','blue'))
plot(xcorr,ycorr,type='l',col=c('black'),main='Cross-Correlation',xlab='Lag between + and - tags',ylab='Correlation')
abline(v=altd,lty=2,col=c('red'))
legend('topleft','alternative lag(s)',lty=2,col='red')
legend('topright','alt lag(s) : 122')
rm(list=ls())
library("RSQLite")
library("RSQLite")
setwd("~/Dropbox/Project_RiceGeneticVariation")
sqlite <- dbDriver("SQLite")
con <- dbConnect(sqlite, "michael.db")
all <- dbGetQuery(con, "SELECT gm1.gene_locus as regulator, net.regulator as netID_regulator,
gm2.gene_locus as target, net.target as netID_target
FROM interaction_network as net
INNER JOIN gene_model as gm1 ON (net.regulator = gm1.id)
INNER JOIN gene_model as gm2 ON (net.target = gm2.id)")
View(all)
View(all)
specific_regulators_interactions <- dbGetQuery(con, "SELECT gm1.gene_locus as regulator, net.regulator as netID_regulator,
gm2.gene_locus as target, net.target as netID_target
FROM interaction_network as net
INNER JOIN gene_model as gm1 ON (net.regulator = gm1.id)
INNER JOIN gene_model as gm2 ON (net.target = gm2.id)
WHERE gm1.gene_locus = 'LOC_Os11g06020'")
View(all)
dbListTables(con)
dbListFields(con, interaction_stats)
dbListFields(con, 'interaction_stats')
specific_regulator <-  dbGetQuery(con, "SELECT gm2.gene_locus as target, net.target as netID_target
FROM interaction_network as net
INNER JOIN gene_model as gm1 ON (net.regulator = gm1.id)
INNER JOIN gene_model as gm2 ON (net.target = gm2.id)
WHERE gm1.gene_locus = LOC_Os01g51154'")
specific_regulator <-  dbGetQuery(con, "SELECT gm2.gene_locus as target, net.target as netID_target
FROM interaction_network as net
INNER JOIN gene_model as gm1 ON (net.regulator = gm1.id)
INNER JOIN gene_model as gm2 ON (net.target = gm2.id)
WHERE gm1.gene_locus = 'LOC_Os01g51154'")
a_gene_unknown_purpose <- dbGetQuery(con, "SELECT gm1.gene_locus as regulator, net.regulator as netID_regulator,
gm2.gene_locus as target, net.target as netID_target
FROM interaction_network as net
INNER JOIN gene_model as gm1 ON (net.regulator = gm1.id)
INNER JOIN gene_model as gm2 ON (net.target = gm2.id)
WHERE gm1.gene_locus = 'LOC_Os08g43160' OR gm2.gene_locus = 'LOC_Os08g43160'")
specific_target_interactions <- dbGetQuery(con, "SELECT gm1.gene_locus as regulator, net.regulator as netID_regulator,
gm2.gene_locus as target, net.target as netID_target
FROM interaction_network as net
INNER JOIN gene_model as gm1 ON (net.regulator = gm1.id)
INNER JOIN gene_model as gm2 ON (net.target = gm2.id)
WHERE gm2.gene_locus = 'LOC_Os08g43160'")
specific_regulators_interactions <- dbGetQuery(con, "SELECT gm1.gene_locus as regulator, net.regulator as netID_regulator,
gm2.gene_locus as target, net.target as netID_target
FROM interaction_network as net
INNER JOIN gene_model as gm1 ON (net.regulator = gm1.id)
INNER JOIN gene_model as gm2 ON (net.target = gm2.id)
WHERE gm1.gene_locus = 'LOC_Os08g43160'")
setwd("~/Dropbox/Project_RiceGeneticVariation")
sqlite <- dbDriver("SQLite")
con <- dbConnect(sqlite, "michael_03312016.db")
dbListTables(con)
dbListFields(con, 'interaction_stats')
all <- dbGetQuery(con, "SELECT gm1.gene_locus as regulator, net.regulator as netID_regulator,
gm2.gene_locus as target, net.target as netID_target
FROM interaction_network as net
INNER JOIN gene_model as gm1 ON (net.regulator = gm1.id)
INNER JOIN gene_model as gm2 ON (net.target = gm2.id)")
dbListFields(con, 'interaction_network')
network <- dbGetQuery(con, "SELECT * FROM interaction_network")
View(network)
gff <- dbGetQuery(con, "SELECT * FROM gene_model LIMIT 10")
View(gff)
View(network)
setwd("~/Dropbox/NYU2/AppliedGenomics/Project")
deg <- read.table("042317-1.txt", header =T, sep=",")
rm(list=ls())
deg <- read.table("042317-1.txt", header =T, sep=",")
View(deg)
?reshape
neams(deg)
names(deg)
deg_long <- reshape(deg, direction="long", idvar="Condition_DE" )
vars <- names(deg)[-1]
deg_long <- reshape(deg, direction="long", idvar="Condition_DE", varying=vars )
summary(Indometh)
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
wide
reshape(wide, idvar = "Subject", varying = list(2:12),
v.names = "conc", direction = "long")
deg_long <- reshape(deg, direction="long", idvar="Condition_DE", varying = vars , v.names="count")
View(deg_long)
reshape(wide, direction = "long")
summary(deg_long)
df <- data.frame(id = rep(1:4, rep(2,4)),
visit = I(rep(c("Before","After"), 4)),
x = rnorm(4), y = runif(4))
df
df3 <- data.frame(id = 1:4, age = c(40,50,60,50), dose1 = c(1,2,1,2),
dose2 = c(2,1,2,1), dose4 = c(3,3,3,3))
rm(df)
df3
reshape(df3, direction = "long", varying = 3:5, sep = "")
deg_long <- reshape(deg, direction="long", idvar="Condition_DE", varying = 2:9 , v.names="count")
View(deg_long)
library("reshape2", lib.loc="/usr/local/lib/R/3.2/site-library")
?reshape2
??reshape2
?dcast
t <- melt(deg)
View(t)
summary(t)
library(ggplot2)
View(deg_long)
View(deg)
hist(deg$HEAT_UP)
hist(deg$HEAT_DOWN)
hist(deg$DROUGHT_UP)
summary(deg$DROUGHT_UP)
deg_drought_above5 <- deg[deg$DROUGHT_UP >= 5, ]$DROUGHT_UP
View(t)
hist(deg_drought_above5)
summary(deg_drought_above5)
deg <- read.table("042317-1.txt", header =T, sep=",", row.names = 1)
View(deg)
deg_drought_above5 <- as.data.frame(deg[deg$DROUGHT_UP >= 5, ]$DROUGHT_UP)
View(deg_drought_above5)
deg_drought_above5 <- as.data.frame(deg[deg$DROUGHT_UP >= 5, ])
View(deg_drought_above5)
drought_up_above5_genes <- rownames(deg_drought_above5)
drought_up_above5_genes[2:5]
drought_up_above5_genes[2:9]
